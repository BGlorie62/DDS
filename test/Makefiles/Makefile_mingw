# --------------------- INFORMATION --------------------------------

# This the test Makefile for Windows and the mingw GNU g++
# compiler.  It assumes a Unix-like setup for some commands.

# The dtest program itself does not use multi-threading, 
# but the library might, depending on how it was compiled.

# The Makefile also allows an "un-official" and ugly, but
# sometimes practical compilation of a directly integrated
# executable (i.e. not using the DLL).  For this the Makefile
# uses the source and object files in the src directory...
# Use "make itest" at your own risk.

# If you need to add something for the threading system, this is
# the place.

THREAD_LINK	= -lgomp

# ----------------------- OFTEN OK    ------------------------------

# From here on you you don't have to change anything to CONFIGURE
# the compilation.  But you may well have to change something to 
# get it to compile.

INCL_DDS_SOURCE	= Makefiles/dds_sources.txt
INCL_OWN_SOURCE	= Makefiles/own_sources.txt
INCL_DEPENDS	= Makefiles/depends_o.txt

# If your compiler name is not given here, change it.
# CXX	= g++

# We compile with aggressive warnings, but we have to turn off some
# of them as they appear in libraries in great numbers...

WARN_FLAGS	= 		\
	-Wshadow 		\
	-Wsign-conversion 	\
	-pedantic -Wall -Wextra  \
	-Wcast-align -Wcast-qual \
	-Wctor-dtor-privacy 	\
	-Wdisabled-optimization \
	-Winit-self 		\
	-Wlogical-op 		\
	-Wmissing-declarations 	\
	-Wmissing-include-dirs 	\
	-Wnoexcept 		\
	-Wold-style-cast 	\
	-Woverloaded-virtual 	\
	-Wredundant-decls 	\
	-Wsign-promo 		\
	-Wstrict-null-sentinel 	\
	-Wstrict-overflow=1 	\
	-Wswitch-default -Wundef \
	-Werror 		\
	-Wno-unused 		\
	-Wno-unknown-pragmas 	\
	-Wno-long-long		\
	-Wno-format

CXXFLAGS	= -O3 -mms-bitfields -flto $(WARN_FLAGS) -I../include \
	-DNDEBUG -DWIN32 -DWINVER=0x0601 -D_WIN32_WINNT=0x0601 -D_CONSOLE -DWIN32CON -D_LIB

DLLBASE		= dds

LDFLAGS	= -s -mconsole -flto	\
	-Wl,--dynamicbase 	\
	-Wl,--nxcompat 		\
	-Wl,--no-seh 		\
	-Wl,--enable-stdcall-fixup

LDLIBS	= -static -L. -l$(DLLBASE)

# This is in addition to $(DTEST).cpp

include $(INCL_OWN_SOURCE)

DTEST_OBJ_FILES	= $(subst .cpp,.o,$(DTEST_SOURCE_FILES)) $(DTEST).o

DTEST		= dtest

include $(INCL_DDS_SOURCE)

ITEST_SOURCE_FILES	=	\
	$(DDS_SOURCE_FILES)	\
	$(DTEST_SOURCE_FILES)	\
	itest.cpp

ITEST_OBJ_FILES	= $(subst .cpp,.o,$(ITEST_SOURCE_FILES))

.PHONY: all depend clean install

all: dtest.exe itest.exe

dtest.exe: $(DTEST_OBJ_FILES)
	$(CXX) $(LDFLAGS) $^ $(LDLIBS) -o $@

itest.exe: $(ITEST_OBJ_FILES)
	$(CXX) $(LDFLAGS) $^ $(THREAD_LINK) -o $@

%.o:	%.cpp
	$(CXX) -c $(CXXFLAGS) $< -o $@

depend:
	makedepend -Y -- $(ITEST_SOURCE_FILES) $(DTEST).cpp

clean:
	$(RM) *.exe *.o

install: dtest.exe itest.exe
	cp $^ ../hands

include $(INCL_DEPENDS)


# This is a Makefile for the examples,
# for Windows and the minGW compiler.

# It does assume a Unix-like setup for some commands,
# but if you only want to call "make" with the default target,
# you should be OK.

# The test program itself does not use multi-threading, 
# but the DLL might, depending on how it was compiled.

# The Makefile also allows an "un-official" and ugly, but
# sometimes practical compilation of a directly integrated
# executable (i.e. not using the DLL).  For this the Makefile
# uses the source and object files in the src directory...
# Use "make itest" at your own risk.


# If your exact compiler name is not given here, change it.
# CXX	= g++

# These flags are not turned on by default, but DDS should pass them.
# Turn them on below.
WARN_FLAGS	= 		\
	-Wshadow 		\
	-Wsign-conversion 	\
	-pedantic -Wall -Wextra  \
	-Wcast-align -Wcast-qual \
	-Wctor-dtor-privacy 	\
	-Wdisabled-optimization \
	-Winit-self 		\
	-Wlogical-op 		\
	-Wmissing-declarations 	\
	-Wmissing-include-dirs 	\
	-Wnoexcept 		\
	-Wold-style-cast 	\
	-Woverloaded-virtual 	\
	-Wredundant-decls 	\
	-Wsign-promo 		\
	-Wstrict-null-sentinel 	\
	-Wstrict-overflow=1 	\
	-Wswitch-default -Wundef \
	-Werror 		\
	-Wno-unused 		\
	-Wno-unknown-pragmas 	\
	-Wno-long-long		\
	-Wno-format

CXXFLAGS	= -O3 -mms-bitfields -flto -mtune=generic \
	$(WARN_FLAGS) -I../include \
	-DNDEBUG -DWIN32 -DWINVER=0x0601 -D_WIN32_WINNT=0x0601 -D_CONSOLE -DWIN32CON -D_LIB

DLLBASE		= dds

COMMON_SOURCE_FILES 	=	\
	hands.cpp

ALL_EXAMPLE_FILES	=	\
	AnalysePlayBin.cpp	\
	AnalysePlayPBN.cpp	\
	AnalyseAllPlaysBin.cpp	\
	AnalyseAllPlaysPBN.cpp	\
	CalcDDtable.cpp		\
	CalcDDtablePBN.cpp	\
	CalcAllTables.cpp	\
	CalcAllTablesPBN.cpp	\
	DealerPar.cpp		\
	Par.cpp			\
	SolveBoard.cpp		\
	SolveBoardPBN.cpp	\
	SolveAllBoards.cpp

LDFLAGS	= -s -mconsole -flto	\
	-Wl,--dynamicbase 	\
	-Wl,--nxcompat 		\
	-Wl,--no-seh 		\
	-Wl,--enable-stdcall-fixup

LDLIBS	= -static -L. -l$(DLLBASE)

OBJ_FILES	= $(subst .cpp,.o,$(COMMON_SOURCE_FILES))
EX_OBJ_FILES	= $(subst .cpp,.o,$(ALL_EXAMPLE_FILES))
EX_EXE_FILES	= $(subst .cpp,.exe,$(ALL_EXAMPLE_FILES))

.PHONY: all depend clean

all: $(EX_EXE_FILES)

%.exe: $(OBJ_FILES) %.o
	$(CXX) $(LDFLAGS) $^ $(LDLIBS) -o $@

%.o:	%.cpp
	$(CXX) -c $(CXXFLAGS) $< -o $@

depend:
	makedepend -Y -- $(COMMON_SOURCE_FILES) $(ALL_EXAMPLE_FILES)

clean:
	$(RM) *.exe *.o

# DO NOT DELETE
.PRECIOUS: $(OBJ_FILES) $(EX_OBJ_FILES)

